@{
    Layout = null;
}
@model List<UaScoresDataFrame>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>

<link rel="stylesheet" href="~/filtertbl/style.css">


<!--  Search Box -->
<div>
    <input type="text" class="text-sm" id="Input-1" onkeyup="myFunction()" placeholder="Search for location.." title="Country" style=" display:inline">
    <a href="/CriteriaSelection/DragAndDrop">Save and Continue</a>
</div>
<!--  Info -->
<!--  Checkboxes -->
<table class="table table-striped table-sm">
    <tr>
        <td>
            <input type='checkbox' class="a1" onclick='return filter_continent(this);' name='filter' id="Asia" value="Asia" />Asia
        </td>
        <td>
            <input type='checkbox' class="a2" onclick='return filter_continent(this);' name='filter' id="Europe" value="Europe" />Europe
        </td>
        <td>
            <input type='checkbox' class="a3" onclick='return filter_continent(this);' name='filter' id="North America" value="North America" />North America
        </td>
        <td>
            <input type='checkbox' class="a4" onclick='return filter_continent(this);' name='filter' id="South America" value="South America" />South America
        </td>
        <td>
            <input type='checkbox' class="a5" onclick='return filter_continent(this);' name='filter' id="Africa" value="Africa" />Africa

        </td>
        <td>
            <input type='checkbox' class="a6" onclick='return filter_continent(this);' name='filter' id="Oceania" value="Oceania" />Oceania
        </td>
    </tr>
</table>
<!--  Table -->


<div style="overflow-x:auto; width:100%" id="scroller" class="row g-0">
    <table id="le-Table-1" class="table table-striped table-sm">
        <!--  Table Header -->
        <thead>
            <tr class="header">
                <!--When a header is clicked, run the sortTable function, with a parameter, 0 for sorting by names, 1 for sorting by country:-->
                <th onclick="sortTable(0)">Continent</th>
                <th onclick="sortTable(1)">Country</th>
                <th onclick="sortTable(2)">City</th>
                <th onclick="sortTable(3)">Business Freedom</th>
                <th onclick="sortTable(4)">Commute</th>
                <th onclick="sortTable(5)">Safety</th>
                <th onclick="sortTable(6)">Economy</th>
                <th onclick="sortTable(7)">Cost of Living</th>
                <th onclick="sortTable(8)">Education</th>
                <th onclick="sortTable(9)">Environmental Quality</th>
                <th onclick="sortTable(10)">Healthcare</th>
                <th onclick="sortTable(11)">Housing</th>
                <th onclick="sortTable(12)">Internet Access</th>
                <th onclick="sortTable(13)">Leisure & Culture</th>
                <th onclick="sortTable(14)">Outdoors</th>
                <th onclick="sortTable(15)">Taxation</th>
                <th onclick="sortTable(16)">Startups</th>
                <th onclick="sortTable(17)">Tolerance</th>
                <th onclick="sortTable(18)">Travel Connectivity</th>
            </tr>
        </thead>
        <!--  Table Body / Rows -->
        <tbody>
            @foreach (var item in Model)
            {
                <tr class='clickable-row' data-href='#link'>
                    <td id="continent" value="@item.">
                        @item.Continent

                    </td>
                    <td>
                        @item.Country

                    </td>

                    <td>
                        @item.CityName

                    </td>
                    <td>
                        @item.BusinessFreedom

                    </td>
                    <td>
                        @item.Commute

                    </td>
                    <td>
                        @item.Safety

                    </td>
                    <td>
                        @item.Economy

                    </td>
                    <td>
                        @item.CostofLiving

                    </td>
                    <td>
                        @item.Education

                    </td>

                    <td>
                        @item.EnvironmentalQuality

                    </td>
                    <td>
                        @item.Healthcare

                    </td>
                    <td>
                        @item.Housing

                    </td>
                    <td>
                        @item.InternetAccess

                    </td>
                    <td>
                        @item.LeisureCulture

                    </td>
                    <td>
                        @item.Outdoors

                    </td>
                    <td>
                        @item.Taxation

                    </td>
                    <td>
                        @item.Startups

                    </td>
                    <td>
                        @item.Tolerance

                    </td>
                    <td>
                        @item.TravelConnectivity

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<button type="button" class="btn-save">Save</button>


<!--Very basic body-->
<input type="text" placeholder="Cookie value..." class="val" />
<br>
<br>
<button class="create">Create Cookie</button>
<button class="get">Get Cookie</button>
<button class="delete">Delete Cookie</button>

<script >
    // cookie
    $(document).ready(function () {

        //Variables
        var a1 = $(".a1");
        var a2 = $(".a2");
        var a3 = $(".a3");
        var a4 = $(".a4");
        var a5 = $(".a5");
        var a6 = $(".a6");
        var val = $(".val");
        var crt = $(".create");
        var getc = $(".get");
        var delc = $(".delete");
        var btnsave = $(".btn-save");

        //Cookie code (cookie monster says yum! (parody))

        //Create cookie
        btnsave.click(function () {
            if (a1.checked == true) {
                Cookies.set("asia-cookie", val.val());
            } else {
                console.log("nothing happened");
            }
        });

        crt.click(function () {

            Cookies.set("first-cookie", val.val());

        });

        //Read the cookie value
        getc.click(function () {

            var cookieval = Cookies.get("first-cookie");

            alert("Cookie value is " + cookieval);

        });

        //Remove the cookie
        getc.click(function () {

            Cookies.remove("first-cookie");

        });

    });

    // other stuff
    /* Sort function */
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("le-Table-1");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
    /* Search/filter function */
    function filterTable(event) {
        var filter = event.target.value.toUpperCase();
        var rows = document.querySelector("#le-Table-1 tbody").rows;

        for (var i = 0; i < rows.length; i++) {
            var firstCol = rows[i].cells[0].textContent.toUpperCase();
            var secondCol = rows[i].cells[1].textContent.toUpperCase();
            var thirdCol = rows[i].cells[2].textContent.toUpperCase();

            if (firstCol.indexOf(filter) > -1 || secondCol.indexOf(filter) > -1 || thirdCol.indexOf(filter) > -1) {
                rows[i].style.display = "";
            } else {
                rows[i].style.display = "none";
            }
        }
    }
    document.querySelector('#Input-1').addEventListener('keyup', filterTable, false);
    function content(elem) {
    }


    /* checkbox filter */
    function filter_continent(box) {
        var cbs = document.getElementsByTagName('input');
        var all_checked_continents = [];
        for (var i = 0; i < cbs.length; i++) {
            if (cbs[i].type == "checkbox") {
                if (cbs[i].name.match(/^filter/)) {
                    if (cbs[i].checked) {
                        all_checked_continents.push(cbs[i].value);
                    }
                }
            }
        }
        if (all_checked_continents.length > 0) {
            $('#le-Table-1 tr').each(function (i, row) {
                var $tds = $(this).find('td')
                if ($tds.length) {
                    var type = $tds[0].innerText;
                    console.log(type)
                    if (!(type && all_checked_continents.indexOf(type) >= 0)) {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                }
            });

        }
        else {
            $('#le-Table-1 tr').each(function (i, row) {
                var $tds = $(this).find('td'),
                    type = $tds.eq(0).text();
                $(this).show();
            });
        }
        return true;
    }

    /* clickable row */
    jQuery(document).ready(function ($) {
        $(".clickable-row").click(function () {
            window.location = $(this).data("href");
        });
    });
</script>